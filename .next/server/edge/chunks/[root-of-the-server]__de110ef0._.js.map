{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\r\nimport type { NextRequest } from 'next/server'\r\n\r\nexport function middleware(request: NextRequest) {\r\n  // Get the pathname of the request (e.g. /, /protected)\r\n  const path = request.nextUrl.pathname\r\n\r\n  // Define public paths that don't require authentication\r\n  const isPublicPath = path === '/login' || path === '/register' || path === '/'\r\n\r\n  // Get the token from the request headers\r\n  const token = request.cookies.get('auth-token')?.value\r\n\r\n  // Redirect logic\r\n  if (isPublicPath && token) {\r\n    // If user is authenticated and trying to access public path, redirect to dashboard\r\n    return NextResponse.redirect(new URL('/dashboard', request.url))\r\n  }\r\n\r\n  if (!isPublicPath && !token) {\r\n    // If user is not authenticated and trying to access protected path, redirect to login\r\n    return NextResponse.redirect(new URL('/login', request.url))\r\n  }\r\n\r\n  return NextResponse.next()\r\n}\r\n\r\n// Configure which paths the middleware should run on\r\nexport const config = {\r\n  matcher: [\r\n    /*\r\n     * Match all request paths except for the ones starting with:\r\n     * - api (API routes)\r\n     * - _next/static (static files)\r\n     * - _next/image (image optimization files)\r\n     * - favicon.ico (favicon file)\r\n     */\r\n    '/((?!api|_next/static|_next/image|favicon.ico).*)',\r\n  ],\r\n} "],"names":[],"mappings":";;;;AAAA;AAAA;;AAGO,SAAS,WAAW,OAAoB;IAC7C,uDAAuD;IACvD,MAAM,OAAO,QAAQ,OAAO,CAAC,QAAQ;IAErC,wDAAwD;IACxD,MAAM,eAAe,SAAS,YAAY,SAAS,eAAe,SAAS;IAE3E,yCAAyC;IACzC,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,eAAe;IAEjD,iBAAiB;IACjB,IAAI,gBAAgB,OAAO;QACzB,mFAAmF;QACnF,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,cAAc,QAAQ,GAAG;IAChE;IAEA,IAAI,CAAC,gBAAgB,CAAC,OAAO;QAC3B,sFAAsF;QACtF,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;IAC5D;IAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAGO,MAAM,SAAS;IACpB,SAAS;QACP;;;;;;KAMC,GACD;KACD;AACH"}}]
}