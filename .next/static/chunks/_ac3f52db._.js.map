{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jpedr/Documents/Programa%C3%A7%C3%A3o/Projeto_micronegocio/Projeto_micronegocio/utils/supabase/client.ts"],"sourcesContent":["import { createBrowserClient } from '@supabase/ssr'\r\n\r\nexport function createClient() {\r\n  return createBrowserClient(\r\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\r\n  )\r\n} "],"names":[],"mappings":";;;AAII;AAJJ;AAAA;;AAEO,SAAS;IACd,OAAO,CAAA,GAAA,6KAAA,CAAA,sBAAmB,AAAD;AAI3B","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jpedr/Documents/Programa%C3%A7%C3%A3o/Projeto_micronegocio/Projeto_micronegocio/components/ThemeToggle.tsx"],"sourcesContent":["'use client'\r\n\r\nimport React from 'react'\r\nimport { FiMoon, FiSun } from 'react-icons/fi'\r\nimport { useTheme } from './ThemeProvider'\r\n\r\ninterface ThemeToggleProps {\r\n  className?: string\r\n  showText?: boolean\r\n}\r\n\r\nexport const ThemeToggle: React.FC<ThemeToggleProps> = ({ \r\n  className = '', \r\n  showText = false \r\n}) => {\r\n  const { theme, toggleTheme } = useTheme()\r\n\r\n  return (\r\n    <button\r\n      onClick={toggleTheme}\r\n      className={`p-2 rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors duration-200 ${className}`}\r\n      aria-label={`Switch to ${theme === 'dark' ? 'light' : 'dark'} mode`}\r\n    >\r\n      {theme === 'dark' ? (\r\n        <FiSun className=\"w-4 h-4 sm:w-5 sm:h-5\" />\r\n      ) : (\r\n        <FiMoon className=\"w-4 h-4 sm:w-5 sm:h-5\" />\r\n      )}\r\n      {showText && (\r\n        <span className=\"ml-2 text-sm\">\r\n          {theme === 'dark' ? 'Light' : 'Dark'}\r\n        </span>\r\n      )}\r\n    </button>\r\n  )\r\n} "],"names":[],"mappings":";;;;AAGA;AACA;;;AAJA;;;AAWO,MAAM,cAA0C;QAAC,EACtD,YAAY,EAAE,EACd,WAAW,KAAK,EACjB;;IACC,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IAEtC,qBACE,6LAAC;QACC,SAAS;QACT,WAAW,AAAC,gMAAyM,OAAV;QAC3M,cAAY,AAAC,aAAgD,OAApC,UAAU,SAAS,UAAU,QAAO;;YAE5D,UAAU,uBACT,6LAAC,iJAAA,CAAA,QAAK;gBAAC,WAAU;;;;;yEAEjB,6LAAC,iJAAA,CAAA,SAAM;gBAAC,WAAU;;;;;;YAEnB,0BACC,6LAAC;gBAAK,WAAU;0BACb,UAAU,SAAS,UAAU;;;;;;;;;;;;AAKxC;GAxBa;;QAIoB,+HAAA,CAAA,WAAQ;;;KAJ5B","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jpedr/Documents/Programa%C3%A7%C3%A3o/Projeto_micronegocio/Projeto_micronegocio/app/appointments/new/page.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport {\n  FiCalendar,\n  FiClock,\n  FiUser,\n  FiMapPin,\n  FiChevronLeft,\n  FiGlobe,\n  FiCheck,\n  FiX,\n  FiPlus,\n  FiEdit3,\n} from \"react-icons/fi\";\nimport { createClient } from '@/utils/supabase/client';\nimport { useTheme } from '@/components/ThemeProvider';\nimport { ThemeToggle } from '@/components/ThemeToggle';\n\ninterface TimeSlot {\n  time: string;\n  available: boolean;\n  formatted: string;\n}\n\ninterface Service {\n  id: string;\n  name: string;\n  duration_minutes: number;\n  price: number;\n  description?: string;\n}\n\nconst NewAppointmentPage = () => {\n  const router = useRouter();\n  const { theme } = useTheme();\n  const [selectedDate, setSelectedDate] = useState<string>('');\n  const [selectedTime, setSelectedTime] = useState<string>('');\n  const [selectedServices, setSelectedServices] = useState<Service[]>([]);\n  const [availableSlots, setAvailableSlots] = useState<TimeSlot[]>([]);\n  const [services, setServices] = useState<Service[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isCreating, setIsCreating] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n  const [language, setLanguage] = useState<\"en\" | \"es\" | \"pt\" | \"fr\">(\"pt\");\n  const [step, setStep] = useState<'date' | 'time' | 'service' | 'confirm'>('date');\n\n  // Fetch services from database\n  const fetchServices = async () => {\n    setIsLoading(true);\n    const supabase = createClient();\n\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      \n      if (!user) {\n        router.push('/login');\n        return;\n      }\n\n      const { data, error } = await supabase\n        .from('services')\n        .select('*')\n        .eq('user_id', user.id)\n        .eq('is_active', true)\n        .order('name');\n\n      if (error) {\n        console.error('Error fetching services:', error);\n        setError(t.errorCreating);\n      } else {\n        setServices(data || []);\n      }\n    } catch (error) {\n      console.error('Error fetching services:', error);\n      setError(t.errorCreating);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Language translations\n  const translations = {\n    en: {\n      title: \"New Appointment\",\n      subtitle: \"Schedule your appointment\",\n      backToAppointments: \"Back to Appointments\",\n      selectDate: \"Select Date\",\n      selectTime: \"Select Time\",\n      selectService: \"Select Service\",\n      confirmAppointment: \"Confirm Appointment\",\n      availableSlots: \"Available Slots\",\n      noAvailableSlots: \"No available slots for this date\",\n      selectDifferentDate: \"Please select a different date\",\n      businessHours: \"Business Hours\",\n      monday: \"Monday\",\n      tuesday: \"Tuesday\",\n      wednesday: \"Wednesday\",\n      thursday: \"Thursday\",\n      friday: \"Friday\",\n      saturday: \"Saturday\",\n      sunday: \"Sunday\",\n      closed: \"Closed\",\n      next: \"Next\",\n      previous: \"Previous\",\n      confirm: \"Confirm\",\n      cancel: \"Cancel\",\n      appointmentDetails: \"Appointment Details\",\n      date: \"Date\",\n      time: \"Time\",\n      service: \"Service\",\n      duration: \"Duration\",\n      price: \"Price\",\n      total: \"Total\",\n      createAppointment: \"Create Appointment\",\n      appointmentCreated: \"Appointment created successfully!\",\n      errorCreating: \"Error creating appointment. Please try again.\",\n      loading: \"Loading...\",\n      noServices: \"No services available\",\n      selectServiceFirst: \"Please select a service first\",\n      noTimeSelected: \"Please select a time\",\n      noDateSelected: \"Please select a date\",\n             appointmentTitle: \"Appointment\",\n               notes: \"Notes (Optional)\",\n        location: \"Location (Optional)\",\n        unavailable: \"Unavailable\",\n        available: \"Available\",\n        selectedServices: \"Selected Services\",\n        totalDuration: \"Total Duration\",\n    },\n    pt: {\n      title: \"Novo Agendamento\",\n      subtitle: \"Agende sua consulta\",\n      backToAppointments: \"Voltar aos Agendamentos\",\n      selectDate: \"Selecionar Data\",\n      selectTime: \"Selecionar Horário\",\n      selectService: \"Selecionar Serviço\",\n      confirmAppointment: \"Confirmar Agendamento\",\n      availableSlots: \"Horários Disponíveis\",\n      noAvailableSlots: \"Nenhum horário disponível para esta data\",\n      selectDifferentDate: \"Por favor selecione uma data diferente\",\n      businessHours: \"Horário de Funcionamento\",\n      monday: \"Segunda-feira\",\n      tuesday: \"Terça-feira\",\n      wednesday: \"Quarta-feira\",\n      thursday: \"Quinta-feira\",\n      friday: \"Sexta-feira\",\n      saturday: \"Sábado\",\n      sunday: \"Domingo\",\n      closed: \"Fechado\",\n      next: \"Próximo\",\n      previous: \"Anterior\",\n      confirm: \"Confirmar\",\n      cancel: \"Cancelar\",\n      appointmentDetails: \"Detalhes do Agendamento\",\n      date: \"Data\",\n      time: \"Horário\",\n      service: \"Serviço\",\n      duration: \"Duração\",\n      price: \"Preço\",\n      total: \"Total\",\n      createAppointment: \"Criar Agendamento\",\n      appointmentCreated: \"Agendamento criado com sucesso!\",\n      errorCreating: \"Erro ao criar agendamento. Tente novamente.\",\n      loading: \"Carregando...\",\n      noServices: \"Nenhum serviço disponível\",\n      selectServiceFirst: \"Por favor selecione um serviço primeiro\",\n      noTimeSelected: \"Por favor selecione um horário\",\n      noDateSelected: \"Por favor selecione uma data\",\n             appointmentTitle: \"Agendamento\",\n               notes: \"Observações (Opcional)\",\n        location: \"Local (Opcional)\",\n        unavailable: \"Indisponível\",\n        available: \"Disponível\",\n        selectedServices: \"Serviços Selecionados\",\n        totalDuration: \"Duração Total\",\n    },\n    es: {\n      title: \"Nueva Cita\",\n      subtitle: \"Programa tu cita\",\n      backToAppointments: \"Volver a las Citas\",\n      selectDate: \"Seleccionar Fecha\",\n      selectTime: \"Seleccionar Hora\",\n      selectService: \"Seleccionar Servicio\",\n      confirmAppointment: \"Confirmar Cita\",\n      availableSlots: \"Horarios Disponibles\",\n      noAvailableSlots: \"No hay horarios disponibles para esta fecha\",\n      selectDifferentDate: \"Por favor selecciona una fecha diferente\",\n      businessHours: \"Horario de Atención\",\n      monday: \"Lunes\",\n      tuesday: \"Martes\",\n      wednesday: \"Miércoles\",\n      thursday: \"Jueves\",\n      friday: \"Viernes\",\n      saturday: \"Sábado\",\n      sunday: \"Domingo\",\n      closed: \"Cerrado\",\n      next: \"Siguiente\",\n      previous: \"Anterior\",\n      confirm: \"Confirmar\",\n      cancel: \"Cancelar\",\n      appointmentDetails: \"Detalles de la Cita\",\n      date: \"Fecha\",\n      time: \"Hora\",\n      service: \"Servicio\",\n      duration: \"Duración\",\n      price: \"Precio\",\n      total: \"Total\",\n      createAppointment: \"Crear Cita\",\n      appointmentCreated: \"¡Cita creada exitosamente!\",\n      errorCreating: \"Error al crear cita. Intenta de nuevo.\",\n      loading: \"Cargando...\",\n      noServices: \"No hay servicios disponibles\",\n      selectServiceFirst: \"Por favor selecciona un servicio primero\",\n      noTimeSelected: \"Por favor selecciona una hora\",\n      noDateSelected: \"Por favor selecciona una fecha\",\n             appointmentTitle: \"Cita\",\n               notes: \"Notas (Opcional)\",\n        location: \"Ubicación (Opcional)\",\n        unavailable: \"No Disponible\",\n        available: \"Disponible\",\n        selectedServices: \"Servicios Seleccionados\",\n        totalDuration: \"Duración Total\",\n    },\n    fr: {\n      title: \"Nouveau Rendez-vous\",\n      subtitle: \"Planifiez votre rendez-vous\",\n      backToAppointments: \"Retour aux Rendez-vous\",\n      selectDate: \"Sélectionner la Date\",\n      selectTime: \"Sélectionner l'Heure\",\n      selectService: \"Sélectionner le Service\",\n      confirmAppointment: \"Confirmer le Rendez-vous\",\n      availableSlots: \"Créneaux Disponibles\",\n      noAvailableSlots: \"Aucun créneau disponible pour cette date\",\n      selectDifferentDate: \"Veuillez sélectionner une date différente\",\n      businessHours: \"Heures d'Ouverture\",\n      monday: \"Lundi\",\n      tuesday: \"Mardi\",\n      wednesday: \"Mercredi\",\n      thursday: \"Jeudi\",\n      friday: \"Vendredi\",\n      saturday: \"Samedi\",\n      sunday: \"Dimanche\",\n      closed: \"Fermé\",\n      next: \"Suivant\",\n      previous: \"Précédent\",\n      confirm: \"Confirmer\",\n      cancel: \"Annuler\",\n      appointmentDetails: \"Détails du Rendez-vous\",\n      date: \"Date\",\n      time: \"Heure\",\n      service: \"Service\",\n      duration: \"Durée\",\n      price: \"Prix\",\n      total: \"Total\",\n      createAppointment: \"Créer le Rendez-vous\",\n      appointmentCreated: \"Rendez-vous créé avec succès!\",\n      errorCreating: \"Erreur lors de la création du rendez-vous. Veuillez réessayer.\",\n      loading: \"Chargement...\",\n      noServices: \"Aucun service disponible\",\n      selectServiceFirst: \"Veuillez sélectionner un service d'abord\",\n      noTimeSelected: \"Veuillez sélectionner une heure\",\n      noDateSelected: \"Veuillez sélectionner une date\",\n             appointmentTitle: \"Rendez-vous\",\n               notes: \"Notes (Optionnel)\",\n        location: \"Lieu (Optionnel)\",\n        unavailable: \"Indisponible\",\n        available: \"Disponible\",\n        selectedServices: \"Services Sélectionnés\",\n        totalDuration: \"Durée Totale\",\n    },\n  };\n\n  const t = translations[language as keyof typeof translations] as {\n    [key: string]: string;\n  };\n\n  const languages = [\n    { code: \"pt\", name: \"Português\", flag: \"🇧🇷\" },\n    { code: \"en\", name: \"English\", flag: \"🇺🇸\" },\n    { code: \"es\", name: \"Español\", flag: \"🇪🇸\" },\n    { code: \"fr\", name: \"Français\", flag: \"🇫🇷\" },\n  ];\n\n  // Default business hours (can be fetched from user settings later)\n  const businessHours = {\n    monday: { start: \"08:00\", end: \"20:00\" },\n    tuesday: { start: \"08:00\", end: \"20:00\" },\n    wednesday: { start: \"08:00\", end: \"20:00\" },\n    thursday: { start: \"08:00\", end: \"20:00\" },\n    friday: { start: \"08:00\", end: \"20:00\" },\n    saturday: { start: \"08:00\", end: \"17:00\" },\n    sunday: { start: null, end: null },\n  };\n\n  useEffect(() => {\n    document.documentElement.lang = language;\n  }, [language]);\n\n  useEffect(() => {\n    fetchServices();\n  }, []);\n\n  useEffect(() => {\n    if (selectedDate) {\n      generateAvailableSlots();\n    }\n  }, [selectedDate]);\n\n\n\n  const generateAvailableSlots = async () => {\n    if (!selectedDate) return;\n\n    const date = new Date(selectedDate);\n    const shortDay = date.toLocaleDateString('en-US', { weekday: 'short' }).toLowerCase();\n    const dayMapping: { [key: string]: keyof typeof businessHours } = {\n      'mon': 'monday',\n      'tue': 'tuesday', \n      'wed': 'wednesday',\n      'thu': 'thursday',\n      'fri': 'friday',\n      'sat': 'saturday',\n      'sun': 'sunday'\n    };\n    const dayOfWeek = dayMapping[shortDay];\n    const daySchedule = businessHours[dayOfWeek];\n\n    if (!daySchedule.start || !daySchedule.end) {\n      setAvailableSlots([]);\n      return;\n    }\n\n    // Fetch existing appointments for this date\n    const supabase = createClient();\n    const { data: { user } } = await supabase.auth.getUser();\n    \n    if (!user) {\n      setAvailableSlots([]);\n      return;\n    }\n\n    const { data: existingAppointments } = await supabase\n      .from('appointments')\n      .select('start_time, end_time')\n      .eq('user_id', user.id)\n      .eq('appointment_date', selectedDate)\n      .in('status', ['scheduled', 'confirmed']);\n\n    const slots: TimeSlot[] = [];\n    const startTime = new Date(`2000-01-01T${daySchedule.start}`);\n    const endTime = new Date(`2000-01-01T${daySchedule.end}`);\n    const slotDuration = 60; // 1 hour slots\n\n    while (startTime < endTime) {\n      const timeString = startTime.toTimeString().slice(0, 5);\n      \n      // Calculate end time for this hour slot\n      const slotEndTime = new Date(startTime.getTime() + 60 * 60000); // 1 hour\n      const slotEndString = slotEndTime.toTimeString().slice(0, 5);\n      \n      // Check if this hour slot conflicts with existing appointments\n      const isAvailable = !existingAppointments?.some(appointment => {\n        const appointmentStart = appointment.start_time;\n        const appointmentEnd = appointment.end_time;\n        \n        // Check for overlap: new appointment starts before existing ends AND new appointment ends after existing starts\n        return timeString < appointmentEnd && slotEndString > appointmentStart;\n      });\n\n      // Format the time range (e.g., \"08:00 - 09:00\")\n      const formattedStart = startTime.toLocaleTimeString('en-US', { \n        hour: 'numeric', \n        minute: '2-digit',\n        hour12: false \n      });\n      const formattedEnd = slotEndTime.toLocaleTimeString('en-US', { \n        hour: 'numeric', \n        minute: '2-digit',\n        hour12: false \n      });\n\n      slots.push({\n        time: timeString,\n        available: isAvailable,\n        formatted: `${formattedStart} - ${formattedEnd}`\n      });\n      startTime.setMinutes(startTime.getMinutes() + slotDuration);\n    }\n\n    setAvailableSlots(slots);\n  };\n\n  const handleDateSelect = (date: string) => {\n    setSelectedDate(date);\n    setSelectedTime('');\n    setStep('time');\n  };\n\n  const handleTimeSelect = (time: string) => {\n    setSelectedTime(time);\n    setStep('service');\n  };\n\n  const handleServiceSelect = (service: Service) => {\n    setSelectedServices(prev => {\n      const isSelected = prev.find(s => s.id === service.id);\n      if (isSelected) {\n        // Remove service if already selected\n        return prev.filter(s => s.id !== service.id);\n      } else {\n        // Add service if not selected\n        return [...prev, service];\n      }\n    });\n  };\n\n  const handleContinueToConfirm = () => {\n    if (selectedServices.length > 0) {\n      setStep('confirm');\n    }\n  };\n\n  const handleCreateAppointment = async () => {\n    if (!selectedDate || !selectedTime || selectedServices.length === 0) {\n      setError(t.errorCreating);\n      return;\n    }\n\n    setIsCreating(true);\n    setError(null);\n    setSuccess(null);\n\n    const supabase = createClient();\n\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      \n      if (!user) {\n        router.push('/login');\n        return;\n      }\n\n      // Calculate total duration and end time\n      const totalDuration = selectedServices.reduce((total, service) => total + service.duration_minutes, 0);\n      const startTime = new Date(`2000-01-01T${selectedTime}`);\n      const endTime = new Date(startTime.getTime() + totalDuration * 60000);\n      const endTimeString = endTime.toTimeString().slice(0, 5);\n\n      // Create service names for title\n      const serviceNames = selectedServices.map(s => s.name).join(', ');\n      const totalPrice = selectedServices.reduce((total, service) => total + service.price, 0);\n\n      const { error } = await supabase\n        .from('appointments')\n        .insert({\n          user_id: user.id,\n          title: `${t.appointmentTitle} - ${serviceNames}`,\n          description: `Services: ${serviceNames}`,\n          appointment_date: selectedDate,\n          start_time: selectedTime,\n          end_time: endTimeString,\n          status: 'scheduled',\n          location: '',\n          notes: '',\n          reminder_sent: false,\n        });\n\n      if (error) {\n        console.error('Error creating appointment:', error);\n        setError(t.errorCreating);\n      } else {\n        setSuccess(t.appointmentCreated);\n        setTimeout(() => {\n          router.push('/appointments');\n        }, 2000);\n      }\n    } catch (error) {\n      console.error('Error creating appointment:', error);\n      setError(t.errorCreating);\n    } finally {\n      setIsCreating(false);\n    }\n  };\n\n  const getDayName = (dateString: string) => {\n    const date = new Date(dateString);\n    const dayNames = {\n      monday: t.monday,\n      tuesday: t.tuesday,\n      wednesday: t.wednesday,\n      thursday: t.thursday,\n      friday: t.friday,\n      saturday: t.saturday,\n      sunday: t.sunday,\n    };\n    const shortDay = date.toLocaleDateString('en-US', { weekday: 'short' }).toLowerCase();\n    const dayMapping: { [key: string]: keyof typeof dayNames } = {\n      'mon': 'monday',\n      'tue': 'tuesday', \n      'wed': 'wednesday',\n      'thu': 'thursday',\n      'fri': 'friday',\n      'sat': 'saturday',\n      'sun': 'sunday'\n    };\n    const dayKey = dayMapping[shortDay];\n    return dayNames[dayKey];\n  };\n\n  const isDateAvailable = (dateString: string) => {\n    const date = new Date(dateString);\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    \n    // Can't book in the past\n    if (date < today) return false;\n    \n    // Check if it's within business hours\n    const shortDay = date.toLocaleDateString('en-US', { weekday: 'short' }).toLowerCase();\n    const dayMapping: { [key: string]: keyof typeof businessHours } = {\n      'mon': 'monday',\n      'tue': 'tuesday', \n      'wed': 'wednesday',\n      'thu': 'thursday',\n      'fri': 'friday',\n      'sat': 'saturday',\n      'sun': 'sunday'\n    };\n    const dayOfWeek = dayMapping[shortDay];\n    const daySchedule = businessHours[dayOfWeek];\n    \n    return daySchedule.start !== null && daySchedule.end !== null;\n  };\n\n  const getNextAvailableDates = () => {\n    const dates: string[] = [];\n    const today = new Date();\n    \n    for (let i = 0; i < 14; i++) {\n      const date = new Date(today);\n      date.setDate(today.getDate() + i);\n      const dateString = date.toISOString().split('T')[0];\n      \n      if (isDateAvailable(dateString)) {\n        dates.push(dateString);\n      }\n    }\n    \n    return dates;\n  };\n\n  const renderDateSelection = () => (\n    <div className=\"space-y-6\">\n      <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n        {t.selectDate}\n      </h3>\n      \n      <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-7 gap-3\">\n        {getNextAvailableDates().map((date) => (\n          <button\n            key={date}\n            onClick={() => handleDateSelect(date)}\n            className=\"p-4 border border-gray-200 dark:border-gray-600 rounded-lg hover:border-blue-500 dark:hover:border-blue-400 hover:bg-blue-50 dark:hover:bg-blue-900/20 transition-colors\"\n          >\n            <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\n              {new Date(date).getDate()}\n            </div>\n            <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n              {getDayName(date)}\n            </div>\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n\n  const renderTimeSelection = () => (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n          {t.selectTime}\n        </h3>\n        <button\n          onClick={() => setStep('date')}\n          className=\"text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300\"\n        >\n          {t.previous}\n        </button>\n      </div>\n      \n      <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n        {new Date(selectedDate).toLocaleDateString()} - {getDayName(selectedDate)}\n      </div>\n      \n             {availableSlots.length > 0 ? (\n         <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-3\">\n           {availableSlots.map((slot) => (\n                           <button\n                key={slot.time}\n                onClick={() => slot.available && handleTimeSelect(slot.time)}\n                disabled={!slot.available}\n                className={`p-4 border rounded-lg transition-colors text-center ${\n                  slot.available\n                    ? 'border-gray-200 dark:border-gray-600 hover:border-blue-500 dark:hover:border-blue-400 hover:bg-blue-50 dark:hover:bg-blue-900/20 cursor-pointer'\n                    : 'border-gray-100 dark:border-gray-700 bg-gray-50 dark:bg-gray-800 cursor-not-allowed opacity-50'\n                }`}\n              >\n                <div className={`text-sm font-medium ${\n                  slot.available\n                    ? 'text-gray-900 dark:text-white'\n                    : 'text-gray-400 dark:text-gray-500'\n                }`}>\n                  {slot.formatted}\n                </div>\n                <div className={`text-xs mt-1 ${\n                  slot.available\n                    ? 'text-green-600 dark:text-green-400'\n                    : 'text-red-600 dark:text-red-400'\n                }`}>\n                  {slot.available ? t.available : t.unavailable}\n                </div>\n              </button>\n           ))}\n         </div>\n      ) : (\n        <div className=\"text-center py-8\">\n          <FiClock className=\"w-12 h-12 text-gray-300 dark:text-gray-600 mx-auto mb-3\" />\n          <p className=\"text-gray-500 dark:text-gray-400\">{t.noAvailableSlots}</p>\n          <button\n            onClick={() => setStep('date')}\n            className=\"mt-3 text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300\"\n          >\n            {t.selectDifferentDate}\n          </button>\n        </div>\n      )}\n    </div>\n  );\n\n  const renderServiceSelection = () => (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n          {t.selectService}\n        </h3>\n        <button\n          onClick={() => setStep('time')}\n          className=\"text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300\"\n        >\n          {t.previous}\n        </button>\n      </div>\n      \n      <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n        {new Date(selectedDate).toLocaleDateString()} às {selectedTime}\n      </div>\n      \n             {services.length > 0 ? (\n         <div className=\"space-y-6\">\n           <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n             {services.map((service) => {\n               const isSelected = selectedServices.find(s => s.id === service.id);\n               return (\n                 <button\n                   key={service.id}\n                   onClick={() => handleServiceSelect(service)}\n                   className={`p-6 border rounded-lg transition-colors text-center ${\n                     isSelected\n                       ? 'border-blue-500 dark:border-blue-400 bg-blue-50 dark:bg-blue-900/20'\n                       : 'border-gray-200 dark:border-gray-600 hover:border-blue-500 dark:hover:border-blue-400 hover:bg-blue-50 dark:hover:bg-blue-900/20'\n                   }`}\n                 >\n                   <div className=\"space-y-3\">\n                     <div className=\"flex items-center justify-between\">\n                       <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                         {service.name}\n                       </div>\n                       {isSelected && (\n                         <FiCheck className=\"w-6 h-6 text-blue-600 dark:text-blue-400\" />\n                       )}\n                     </div>\n                     {service.description && (\n                       <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                         {service.description}\n                       </p>\n                     )}\n                     <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                       {service.duration_minutes} min\n                     </div>\n                     <div className=\"text-xl font-semibold text-blue-600 dark:text-blue-400\">\n                       R$ {service.price.toFixed(2)}\n                     </div>\n                   </div>\n                 </button>\n               );\n             })}\n           </div>\n           \n           {selectedServices.length > 0 && (\n             <div className=\"bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-700 rounded-lg p-4\">\n               <h4 className=\"font-medium text-blue-900 dark:text-blue-100 mb-2\">\n                 {t.selectedServices} ({selectedServices.length})\n               </h4>\n               <div className=\"space-y-2\">\n                 {selectedServices.map((service) => (\n                   <div key={service.id} className=\"flex justify-between items-center text-sm\">\n                     <span className=\"text-blue-800 dark:text-blue-200\">{service.name}</span>\n                     <span className=\"text-blue-600 dark:text-blue-400\">R$ {service.price.toFixed(2)}</span>\n                   </div>\n                 ))}\n                 <div className=\"border-t border-blue-200 dark:border-blue-600 pt-2 mt-2\">\n                   <div className=\"flex justify-between items-center font-medium\">\n                     <span className=\"text-blue-900 dark:text-blue-100\">Total:</span>\n                     <span className=\"text-blue-600 dark:text-blue-400\">\n                       R$ {selectedServices.reduce((total, service) => total + service.price, 0).toFixed(2)}\n                     </span>\n                   </div>\n                 </div>\n               </div>\n             </div>\n           )}\n           \n           <div className=\"flex justify-end\">\n             <button\n               onClick={handleContinueToConfirm}\n               disabled={selectedServices.length === 0}\n               className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n             >\n               {t.next}\n             </button>\n           </div>\n         </div>\n      ) : (\n        <div className=\"text-center py-8\">\n          <FiUser className=\"w-12 h-12 text-gray-300 dark:text-gray-600 mx-auto mb-3\" />\n          <p className=\"text-gray-500 dark:text-gray-400\">{t.noServices}</p>\n        </div>\n      )}\n    </div>\n  );\n\n  const renderConfirmation = () => (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n          {t.confirmAppointment}\n        </h3>\n        <button\n          onClick={() => setStep('service')}\n          className=\"text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300\"\n        >\n          {t.previous}\n        </button>\n      </div>\n      \n      <div className=\"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-600 rounded-lg p-6\">\n        <h4 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n          {t.appointmentDetails}\n        </h4>\n        \n        <div className=\"space-y-4\">\n          <div className=\"flex justify-between\">\n            <span className=\"text-gray-600 dark:text-gray-400\">{t.date}:</span>\n            <span className=\"text-gray-900 dark:text-white\">\n              {new Date(selectedDate).toLocaleDateString()}\n            </span>\n          </div>\n          \n          <div className=\"flex justify-between\">\n            <span className=\"text-gray-600 dark:text-gray-400\">{t.time}:</span>\n            <span className=\"text-gray-900 dark:text-white\">{selectedTime}</span>\n          </div>\n          \n          <div className=\"space-y-2\">\n            {selectedServices.map((service) => (\n              <div key={service.id} className=\"flex justify-between items-center py-2 border-b border-gray-100 dark:border-gray-700 last:border-b-0\">\n                <div>\n                  <span className=\"text-gray-900 dark:text-white font-medium\">{service.name}</span>\n                  <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                    {service.duration_minutes} min\n                  </div>\n                </div>\n                <span className=\"text-gray-900 dark:text-white\">R$ {service.price.toFixed(2)}</span>\n              </div>\n            ))}\n          </div>\n          \n          <div className=\"border-t border-gray-200 dark:border-gray-600 pt-4\">\n            <div className=\"flex justify-between\">\n              <span className=\"font-medium text-gray-900 dark:text-white\">{t.total}:</span>\n              <span className=\"font-semibold text-gray-900 dark:text-white\">\n                R$ {selectedServices.reduce((total, service) => total + service.price, 0).toFixed(2)}\n              </span>\n            </div>\n                         <div className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\n               {t.totalDuration}: {selectedServices.reduce((total, service) => total + service.duration_minutes, 0)} min\n             </div>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"flex space-x-3\">\n        <button\n          onClick={() => setStep('service')}\n          className=\"flex-1 px-4 py-2 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors\"\n        >\n          {t.cancel}\n        </button>\n        <button\n          onClick={handleCreateAppointment}\n          disabled={isCreating}\n          className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50\"\n        >\n          {isCreating ? t.loading : t.createAppointment}\n        </button>\n      </div>\n    </div>\n  );\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900\">\n        <div className=\"flex items-center justify-center min-h-screen\">\n          <div className=\"text-center\">\n            <div className=\"w-8 h-8 border-4 border-blue-600 border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\n            <p className=\"text-gray-600 dark:text-gray-400\">{t.loading}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900\">\n      {/* Header */}\n      <header className=\"w-full mx-auto bg-white dark:bg-gray-800 shadow-sm border-b border-gray-200 dark:border-gray-700\">\n        <div className=\"px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            {/* Back button and title */}\n            <div className=\"flex items-center space-x-4\">\n              <button\n                onClick={() => router.push('/appointments')}\n                className=\"flex items-center space-x-2 text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white transition-colors duration-200\"\n              >\n                <FiChevronLeft className=\"w-5 h-5\" />\n                <span className=\"hidden sm:inline\">{t.backToAppointments}</span>\n              </button>\n              <h1 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n                {t.title}\n              </h1>\n            </div>\n\n            {/* Header actions */}\n            <div className=\"flex items-center space-x-4\">\n              {/* Language Selector */}\n              <div className=\"relative\">\n                <button\n                  onClick={() => setLanguage(language === 'pt' ? 'en' : language === 'en' ? 'es' : language === 'es' ? 'fr' : 'pt')}\n                  className=\"flex items-center space-x-2 px-3 py-1.5 rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors duration-200 text-sm\"\n                >\n                  <FiGlobe className=\"w-4 h-4\" />\n                  <span>\n                    {languages.find((l) => l.code === language)?.flag}\n                  </span>\n                </button>\n              </div>\n\n              {/* Dark Mode Toggle */}\n              <ThemeToggle />\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Main Content */}\n      <div className=\"max-w-4xl mx-auto px-4 py-8 sm:px-6 lg:px-8\">\n        <div className=\"mb-8\">\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-2\">\n            {t.title}\n          </h2>\n          <p className=\"text-gray-600 dark:text-gray-400\">\n            {t.subtitle}\n          </p>\n        </div>\n\n        {/* Error/Success Messages */}\n        {error && (\n          <div className=\"mb-6 p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-700 rounded-lg\">\n            <p className=\"text-red-600 dark:text-red-400 text-sm\">{error}</p>\n          </div>\n        )}\n\n        {success && (\n          <div className=\"mb-6 p-4 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-700 rounded-lg\">\n            <p className=\"text-green-600 dark:text-green-400 text-sm\">{success}</p>\n          </div>\n        )}\n\n        {/* Step Content */}\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700 p-6\">\n          {step === 'date' && renderDateSelection()}\n          {step === 'time' && renderTimeSelection()}\n          {step === 'service' && renderServiceSelection()}\n          {step === 'confirm' && renderConfirmation()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NewAppointmentPage;\n"],"names":[],"mappings":"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","debugId":null}}]
}